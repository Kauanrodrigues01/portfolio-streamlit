import streamlit as st


def show():
    col1, col2, col3 = st.columns([1, 4, 1])  # Colunas para centralizar o conte√∫do da p√°gina

    with col1:
        st.write("")

    with col2:
        st.title("Projetos Desenvolvidos")

        st.write("")

        st.write("Aqui est√£o alguns dos projetos que desenvolvi ao longo do meu aprendizado como desenvolvedor. Cada projeto foi uma oportunidade de aprender novas tecnologias, pr√°ticas de programa√ß√£o e trabalhar em desafios reais.")

        st.write("")

        # SGE
        with st.expander("Sistema de Gest√£o de Estoque (SGE) - Projeto Django FullStack"):
            col1, col2, col3 = st.columns([1, 2, 1])
            with col1:
                st.write("")
            with col2:
                st.image("images/projetos/sge/dashboard.png", width=800)
            with col3:
                st.write("")
            st.write("O SGE √© uma plataforma para gerenciar estoques de maneira eficiente, controlando produtos, fornecedores e movimenta√ß√µes de entradas e sa√≠das. Utiliza intelig√™ncia artificial para sugerir reposi√ß√£o de estoque e otimizar a gest√£o, al√©m de gerar gr√°ficos e m√©tricas sobre vendas e produtos.")
            st.write("Tecnologias utilizadas:")
            st.markdown("- Back-end: Python, Django, PostgreSQL, Celery, Redis")
            st.markdown("- Front-end: Bootstrap, Chart.js")
            st.markdown("- Integra√ß√µes: API Evolution (WhatsApp) e Gemini (IA)")
            st.markdown("- Docker para deploy e escalabilidade")
            st.markdown("üîó[Ver projeto](https://github.com/Kauanrodrigues01/sge)")

        # CHATBOT COM IA
        with st.expander("ChatBot com IA - Projeto Python e IA"):
            st.write("√Årea em constru√ß√£o...")

        # GEST√ÉO DE ALUNOS
        with st.expander("Gerenciamento de Alunos - Controle de Mensalidades com Mercado Pago"):
            st.write("√Årea em constru√ß√£o...")

        # FLIX APP
        with st.expander("Flix App - Web App de Cat√°logo de Filmes com Streamlit"):
            st.write("√Årea em constru√ß√£o...")

        # FLIX API
        with st.expander("Flix API - API para Cat√°logo de Filmes"):
            col1, col2, col3 = st.columns([1, 2, 1])
            with col1:
                st.write("")
            with col2:
                st.image("images/projetos/flix-api/swagger.png", width=800)
            with col3:
                st.write("")

            st.write("O Flix API √© uma API para gerenciar um cat√°logo de filmes, com funcionalidades de CRUD, busca, filtros e autentica√ß√£o de usu√°rios. Com documenta√ß√£o interativa, facilita o desenvolvimento de aplica√ß√µes front-end e integra√ß√µes com outras plataformas.")

            st.write("A API foi projetada para ser simples e eficiente, oferecendo funcionalidades completas, como:")
            st.markdown("- Cadastro e gerenciamento de filmes, g√™neros, atores, avalia√ß√µes.")
            st.markdown("- Busca de filmes por t√≠tulo, g√™nero, popularidade, data de lan√ßamento.")
            st.markdown("- Autentifica√ß√£o de usu√°rios com JWT.")
            st.markdown("- Documenta√ß√£o interativa com Swagger.")

            st.write("Tecnologias utilizadas:")
            st.markdown("- Back-end: Django, Django Rest Framework, PostgreSQL")
            st.markdown("- Docker gerenciamento de containers")
            st.markdown("üîó[Ver projeto](https://github.com/Kauanrodrigues01/flix-api)")

        # TEACHERHUNT
        with st.expander("Teacherhunt - API de Busca de Professores Particulares"):
            col1, col2, col3 = st.columns([1, 2, 1])
            with col1:
                st.write("")
            with col2:
                st.image("images/projetos/teacherhunt/swagger.jpeg", width=800)
            with col3:
                st.write("")
            st.write("O Teacherhunt √© uma API para conectar alunos e professores particulares de forma r√°pida e pr√°tica. Com filtros de busca, avalia√ß√µes e chat integrado, facilita a contrata√ß√£o de aulas particulares.")
            st.write("A API foi projetada para facilitar o dia a dia de estudantes e educadores, oferecendo funcionalidades completas, como:")
            st.markdown("- Cadastro e gerenciamento de professores e alunos.")
            st.markdown("- Busca de professores por mat√©ria de interesse.")
            st.markdown("- Agendamento, aceita√ß√£o e cancelamento de aulas.")
            st.markdown("- Avalia√ß√µes e favoritos para professores.")
            st.markdown("- Redefini√ß√£o de senha e ativa√ß√£o de conta por email.")
            st.markdown("- Autentifica√ß√£o e recupera√ß√£o de contas com JWT.")
            st.markdown("- Documenta√ß√£o interativa com Swagger.")
            st.write("Tecnologias utilizadas:")
            st.markdown("- Back-end: Django, Django Rest Framework, PostgreSQL, Docker")

        # BLOG DE RECEITAS
        with st.expander("Blog de Receitas - Projeto Django FullStack"):
            st.write("√Årea em constru√ß√£o...")

        # ALURA SPACE
        with st.expander("Alura Space - Projeto Django FullStack"):
            col1, col2, col3 = st.columns([1, 2, 1])
            with col1:
                st.write("")
            with col2:
                st.image("images/projetos/aluraspace/home.png", width=800)
            with col3:
                st.write("")

            st.write("Alura Space √© uma aplica√ß√£o Django desenvolvida durante a forma√ß√£o da Alura sobre python e Djnago, essa aplica√ß√£o permite: gerenciar e compartilhar imagens. √â uma galeria de imagens que permite aos usu√°rios fazer upload, editar, buscar, favoritar e curtir imagens. Al√©m disso, os usu√°rios podem gerenciar seus perfis, visualizar suas imagens e interagir com o conte√∫do atrav√©s de likes e favoritos.")

            st.write("")

            st.write("Principal funcionalidades:")
            st.markdown("- Cadastro e autentica√ß√£o de usu√°rios.")
            st.markdown("- Gest√£o de imagens: upload, edi√ß√£o, busca, favoritos, curtidas.")
            st.markdown("- Busca e filtros de imagens por categoria, nome e autor.")
            st.markdown("- Perfis de usu√°rios com informa√ß√µes e imagens favoritas.")

            st.write("")

            st.write("Tecnologias utilizadas:")
            st.markdown("- Back-end: Python, Django")
            st.markdown("- Front-end: HTML, CSS, JavaScript")

            st.write("")

            st.write("üîó[Ver projeto](https://github.com/Kauanrodrigues01/Django-S3-crud/blob/main/README.md)")

    with col3:
        st.write("")
